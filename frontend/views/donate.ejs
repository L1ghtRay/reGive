<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Donate a Resource | reGive</title>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap");

      * {
        box-sizing: border-box;
        font-family: Montserrat;
        margin: 0;
        padding: 0;
      }

      html,
      body {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
      }

      body {
        background-image: url("img/bg.jpeg");
        background-size: 100vw 100vh;
        background-repeat: no-repeat;
        background-attachment: fixed;
        margin-top: 70px;
        min-height: 100vh;
      }

      nav {
        display: flex;
        align-items: center;
        top: 0;
        left: 0;
        width: 100%;
        justify-content: space-between;
        padding: 1rem 2rem;
        position: fixed;
        z-index: 1000;
        background-color: rgba(0, 128, 128, 0.85);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
      }

      #logo {
        display: flex;
        width: 75px;
        height: 75px;
        background-color: azure;
        border-radius: 10px;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: teal;
      }

      #links {
        display: flex;
        flex-direction: row;
        gap: 20px;
        margin-right: 10px;
        align-items: center;
      }

      #links a {
        font-family: Montserrat;
        color: rgb(220, 255, 255);
        font-size: 20px;
        font-weight: bold;
        text-decoration: none;
      }

      #links a:hover {
        color: white;
      }

      #links #login {
        color: teal;
        height: fit-content;
        width: fit-content;
        padding: 0.5em;
        background-color: azure;
        border-radius: 0.5rem;
      }

      #links #login:hover {
        color: rgb(0, 100, 100);
        background-color: white;
      }

      .donate-container {
        max-width: 800px;
        margin: 40px auto;
        padding: 0 20px;
      }

      .donate-header {
        background: rgba(0, 128, 128, 0.9);
        color: azure;
        padding: 30px;
        border-radius: 12px 12px 0 0;
        text-align: center;
      }

      .donate-header h1 {
        font-size: 32px;
        font-weight: bold;
        margin-bottom: 10px;
      }

      .donate-header p {
        font-size: 18px;
        opacity: 0.9;
      }

      .donate-form {
        background: white;
        padding: 40px;
        border-radius: 0 0 12px 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        border: 2px solid teal;
        border-top: none;
      }

      .form-section {
        margin-bottom: 30px;
      }

      .form-section h3 {
        color: teal;
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .form-section h3::before {
        content: "";
        width: 4px;
        height: 20px;
        background: teal;
        border-radius: 2px;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-group label {
        display: block;
        color: teal;
        font-weight: 600;
        margin-bottom: 8px;
        font-size: 16px;
      }

      .form-group input,
      .form-group select,
      .form-group textarea {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e0f7fa;
        border-radius: 8px;
        font-size: 16px;
        font-family: Montserrat;
        transition: border-color 0.3s ease;
      }

      .form-group input:focus,
      .form-group select:focus,
      .form-group textarea:focus {
        outline: none;
        border-color: teal;
        box-shadow: 0 0 0 3px rgba(0, 128, 128, 0.1);
      }

      .form-group textarea {
        resize: vertical;
        min-height: 100px;
      }

      .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
      }

      .image-upload {
        border: 2px dashed teal;
        border-radius: 8px;
        padding: 40px 20px;
        text-align: center;
        background: #f0fdff;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .image-upload:hover {
        background: #e0f7fa;
        border-color: #008080;
      }

      .image-upload.dragover {
        background: #e0f7fa;
        border-color: #008080;
        transform: scale(1.02);
      }

      .image-upload-icon {
        font-size: 48px;
        color: teal;
        margin-bottom: 15px;
      }

      .image-upload p {
        color: teal;
        font-weight: 600;
        margin-bottom: 10px;
      }

      .image-upload small {
        color: #666;
        font-size: 14px;
      }

      .image-preview {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 15px;
        margin-top: 20px;
      }

      .image-preview-item {
        position: relative;
        aspect-ratio: 1;
        border-radius: 8px;
        overflow: hidden;
        border: 2px solid teal;
      }

      .image-preview-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .image-preview-item .remove-image {
        position: absolute;
        top: 5px;
        right: 5px;
        background: rgba(255, 0, 0, 0.8);
        color: white;
        border: none;
        border-radius: 50%;
        width: 25px;
        height: 25px;
        cursor: pointer;
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .condition-options {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 15px;
      }

      .condition-option {
        position: relative;
      }

      .condition-option input[type="radio"] {
        position: absolute;
        opacity: 0;
        width: 0;
        height: 0;
      }

      .condition-option label {
        display: block;
        padding: 15px;
        border: 2px solid #e0f7fa;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        background: white;
      }

      .condition-option input[type="radio"]:checked + label {
        border-color: teal;
        background: #e0f7fa;
        color: teal;
        font-weight: bold;
      }

      .condition-option label:hover {
        border-color: teal;
        background: #f0fdff;
      }

      .availability-toggle {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 15px;
        background: #f0fdff;
        border-radius: 8px;
        border: 2px solid #e0f7fa;
      }

      .toggle-switch {
        position: relative;
        width: 60px;
        height: 30px;
      }

      .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
      }

      .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: 0.4s;
        border-radius: 30px;
      }

      .toggle-slider:before {
        position: absolute;
        content: "";
        height: 22px;
        width: 22px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        transition: 0.4s;
        border-radius: 50%;
      }

      input:checked + .toggle-slider {
        background-color: teal;
      }

      input:checked + .toggle-slider:before {
        transform: translateX(30px);
      }

      .contact-preferences {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
      }

      .contact-preference {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 12px;
        background: #f0fdff;
        border-radius: 8px;
        border: 2px solid #e0f7fa;
      }

      .contact-preference input[type="checkbox"] {
        width: 20px;
        height: 20px;
        accent-color: teal;
      }

      .form-actions {
        display: flex;
        gap: 20px;
        justify-content: center;
        margin-top: 40px;
        padding-top: 30px;
        border-top: 2px solid #e0f7fa;
      }

      .btn {
        padding: 15px 30px;
        border: none;
        border-radius: 8px;
        font-size: 18px;
        font-weight: bold;
        font-family: Montserrat;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 150px;
      }

      .btn-primary {
        background: teal;
        color: white;
      }

      .btn-primary:hover {
        background: #008080cc;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 128, 128, 0.3);
      }

      .btn-secondary {
        background: white;
        color: teal;
        border: 2px solid teal;
      }

      .btn-secondary:hover {
        background: #f0fdff;
      }

      .error-message {
        color: #d32f2f;
        font-size: 14px;
        margin-top: 5px;
        display: none;
      }

      .success-message {
        background: #e8f5e8;
        color: #2e7d32;
        padding: 15px;
        border-radius: 8px;
        border: 2px solid #4caf50;
        margin-bottom: 20px;
        display: none;
      }

      @media (max-width: 768px) {
        .donate-container {
          margin: 20px auto;
          padding: 0 15px;
        }

        .donate-form {
          padding: 25px;
        }

        .form-row {
          grid-template-columns: 1fr;
        }

        .condition-options {
          grid-template-columns: 1fr;
        }

        .contact-preferences {
          grid-template-columns: 1fr;
        }

        .form-actions {
          flex-direction: column;
          align-items: center;
        }

        .btn {
          width: 100%;
          max-width: 300px;
        }

        .hidden {
          display: none;
        }
      }
    </style>
  </head>

  <body>
    <nav>
      <div id="logo"><img src="../img/logo.png" width="100" /></div>
      <div id="links">
        <a href="/">Home</a>
        <a href="/category">Donate</a>
        <a href="">Catalog</a>
        <a href="/user-profile">Profile</a>
        <a href="/auth/google" id="login">Login</a>
      </div>
    </nav>

    <div class="donate-container">
      <div class="donate-header">
        <h1>Donate a Resource</h1>
        <p>Share your unused items with fellow students who need them</p>
      </div>

      <form class="donate-form" id="donateForm">
        <div class="success-message" id="successMessage">
          <strong>Success!</strong> Your resource has been posted successfully.
          It will be reviewed and made available to other students soon.
        </div>

        <div class="form-section">
          <h3>Basic Information</h3>

          <div class="form-group">
            <label for="itemTitle">Item Title *</label>
            <input
              type="text"
              id="itemTitle"
              name="itemTitle"
              placeholder="e.g., Engineering Textbooks, Laptop, Study Table"
              required
            />
            <div class="error-message" id="titleError">
              Please enter a descriptive title
            </div>
          </div>

          <div class="form-group">
            <label for="description">Description *</label>
            <textarea
              id="description"
              name="description"
              placeholder="Describe your item in detail. Include brand, model, age, reason for donating, any defects, etc."
              required
            ></textarea>
            <div class="error-message" id="descriptionError">
              Please provide a detailed description
            </div>
          </div>
        </div>

        <div class="form-section">
          <h3>Photos</h3>

          <div class="form-group">
            <div class="image-upload" id="imageUpload">
              <div class="image-upload-icon">📷</div>
              <p>Click to upload photos or drag and drop</p>
              <small>Upload up to 5 photos (JPG, PNG, max 5MB each)</small>
              <input
                type="file"
                id="imageInput"
                multiple
                accept="image/*"
                style="display: none"
              />
            </div>
            <div class="image-preview" id="imagePreview"></div>
          </div>
        </div>

        <div class="form-section">
          <h3>Item Condition</h3>

          <div class="condition-options">
            <div class="condition-option">
              <input
                type="radio"
                id="excellent"
                name="condition"
                value="excellent"
                required
              />
              <label for="excellent">
                <strong>Excellent</strong><br />
                <small>Like new, no wear</small>
              </label>
            </div>
            <div class="condition-option">
              <input
                type="radio"
                id="good"
                name="condition"
                value="good"
                required
              />
              <label for="good">
                <strong>Good</strong><br />
                <small>Minor wear, fully functional</small>
              </label>
            </div>
            <div class="condition-option">
              <input
                type="radio"
                id="fair"
                name="condition"
                value="fair"
                required
              />
              <label for="fair">
                <strong>Fair</strong><br />
                <small>Noticeable wear, works well</small>
              </label>
            </div>
            <div class="condition-option">
              <input
                type="radio"
                id="poor"
                name="condition"
                value="poor"
                required
              />
              <label for="poor">
                <strong>Poor</strong><br />
                <small>Heavy wear, may need repair</small>
              </label>
            </div>
          </div>
          <div class="error-message" id="conditionError">
            Please select the item condition
          </div>
        </div>

        <div class="form-section">
          <h3>Location & Availability</h3>

          <div class="form-row">
            <div class="form-group">
              <label for="location">Pickup Location *</label>
              <select id="location" name="location" required>
                <option value="">Select Location</option>
                <option value="TKM Trust Hostel">TKM Trust Hostel</option>
                <option value="TKM Annex Hostel">TKM Annex Hostel</option>
                <option value="TKM LH">TKM LH</option>
                <option value="TKM UGC">TKM UGC</option>
                <option value="GH">GH</option>
                <option value="INH">INH</option>
                <option value="VIJAYA INN">Vijaya Inn</option>
                <option value="other">Other (specify in notes)</option>
              </select>
              <div class="error-message" id="locationError">
                Please select a pickup location
              </div>
            </div>

            <div class="form-group">
              <label for="availableUntil">Available Until</label>
              <input type="date" id="availableUntil" name="availableUntil" />
            </div>
          </div>

          <div class="form-group">
            <div class="availability-toggle">
              <label class="toggle-switch">
                <input
                  type="checkbox"
                  id="urgentDonation"
                  name="urgentDonation"
                />
                <span class="toggle-slider"></span>
              </label>
              <div>
                <strong>Urgent Donation</strong><br />
                <small
                  >Check this if you need to donate this item quickly (moving
                  out, etc.)</small
                >
              </div>
            </div>
          </div>
        </div>

        <div class="form-section">
          <h3>Contact Preferences</h3>

          <div class="contact-preferences">
            <div class="contact-preference">
              <input
                type="checkbox"
                id="contactEmail"
                name="contactMethods"
                value="email"
                checked
              />
              <label for="contactEmail">Email notifications</label>
            </div>
            <div class="contact-preference">
              <input
                type="checkbox"
                id="contactPhone"
                name="contactMethods"
                value="phone"
              />
              <label for="contactPhone">Phone/WhatsApp</label>
            </div>
            <div class="contact-preference">
              <input
                type="checkbox"
                id="contactInPerson"
                name="contactMethods"
                value="in-person"
                checked
              />
              <label for="contactInPerson">Meet in person</label>
            </div>
          </div>
          <div class="form-group">
            <label>Is the item paid?</label>
            <label><input type="radio" name="isPaid" value="yes" /> Yes</label>
            <label
              ><input type="radio" name="isPaid" value="no" checked /> No</label
            >
          </div>

          <div id="priceDiv" class="form-group hidden">
            <label for="price">Enter Price (₹):</label>
            <input
              type="number"
              id="price"
              name="price"
              min="1"
              placeholder="Enter amount"
            />
          </div>
        </div>

        <div class="form-actions">
          <button type="button" class="btn btn-secondary" id="previewBtn">
            Preview
          </button>
          <button type="submit" class="btn btn-primary" id="submitBtn">
            Post Donation
          </button>
        </div>
      </form>
    </div>

    <script>
      const imageUpload = document.getElementById("imageUpload");
      const imageInput = document.getElementById("imageInput");
      const imagePreview = document.getElementById("imagePreview");
      let uploadedImages = [];

      imageUpload.addEventListener("click", () => {
        imageInput.click();
      });

      imageUpload.addEventListener("dragover", (e) => {
        e.preventDefault();
        imageUpload.classList.add("dragover");
      });

      imageUpload.addEventListener("dragleave", () => {
        imageUpload.classList.remove("dragover");
      });

      imageUpload.addEventListener("drop", (e) => {
        e.preventDefault();
        imageUpload.classList.remove("dragover");
        handleFiles(e.dataTransfer.files);
      });

      imageInput.addEventListener("change", (e) => {
        handleFiles(e.target.files);
      });

      function handleFiles(files) {
        Array.from(files).forEach((file) => {
          if (uploadedImages.length >= 5) {
            alert("Maximum 5 images allowed");
            return;
          }

          if (file.size > 5 * 1024 * 1024) {
            alert("File size should be less than 5MB");
            return;
          }

          if (!file.type.startsWith("image/")) {
            alert("Please upload only image files");
            return;
          }

          const reader = new FileReader();
          reader.onload = (e) => {
            const imageData = {
              file: file,
              url: e.target.result,
              id: Date.now() + Math.random(),
            };
            uploadedImages.push(imageData);
            displayImages();
          };
          reader.readAsDataURL(file);
        });
      }

      function displayImages() {
        imagePreview.innerHTML = "";
        uploadedImages.forEach((image, index) => {
          const imageItem = document.createElement("div");
          imageItem.className = "image-preview-item";
          imageItem.innerHTML = `
                    <img src="${image.url}" alt="Preview ${index + 1}">
                    <button type="button" class="remove-image" onclick="removeImage(${
                      image.id
                    })">×</button>
                `;
          imagePreview.appendChild(imageItem);
        });
      }

      function removeImage(imageId) {
        uploadedImages = uploadedImages.filter((img) => img.id !== imageId);
        displayImages();
      }

      function validateForm() {
        let isValid = true;
        const errors = document.querySelectorAll(".error-message");
        errors.forEach((error) => (error.style.display = "none"));

        const title = document.getElementById("itemTitle").value.trim();
        if (title.length < 5) {
          document.getElementById("titleError").style.display = "block";
          isValid = false;
        }

        /*const category = document.getElementById('category').value;
            if (!category) {
                document.getElementById('categoryError').style.display = 'block';
                isValid = false;
            }*/

        const description = document.getElementById("description").value.trim();
        if (description.length < 20) {
          document.getElementById("descriptionError").style.display = "block";
          isValid = false;
        }

        const condition = document.querySelector(
          'input[name="condition"]:checked'
        );
        if (!condition) {
          document.getElementById("conditionError").style.display = "block";
          isValid = false;
        }

        const location = document.getElementById("location").value;
        if (!location) {
          document.getElementById("locationError").style.display = "block";
          isValid = false;
        }

        return isValid;
      }

      document
        .getElementById("donateForm")
        .addEventListener("submit", async (e) => {
          e.preventDefault();

          if (!validateForm()) return;

          const submitBtn = document.getElementById("submitBtn");
          const originalText = submitBtn.textContent;
          submitBtn.textContent = "Posting...";
          submitBtn.disabled = true;

          try {
            const form = document.getElementById("donateForm");
            const formData = new FormData(form);

            // Add selected category & subcategory (from localStorage or dropdowns)
            formData.append(
              "category",
              localStorage.getItem("selectedCategory")
            );
            formData.append(
              "subcategory",
              localStorage.getItem("selectedSubcategory")
            );

            // Add uploaded images
            uploadedImages.forEach((img) => {
              formData.append("images", img.file);
            });

            const res = await fetch("/api/donate", {
              method: "POST",
              body: formData,
            });

            const data = await res.json();
            if (res.ok) {
              alert("Donation submitted successfully!");
              form.reset();
              uploadedImages = [];
              displayImages();
            } else {
              alert("Error: " + data.error);
            }
          } catch (err) {
            alert("Something went wrong: " + err.message);
          } finally {
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
          }
        });

      document.getElementById("previewBtn").addEventListener("click", () => {
        if (!validateForm()) {
          return;
        }

        const formData = new FormData(document.getElementById("donateForm"));
        const previewData = {
          title: formData.get("itemTitle"),
          category: localStorage.getItem("selectedCategory"),
          subcategory: localStorage.getItem("selectedSubcategory"),
          description: formData.get("description"),
          condition: formData.get("condition"),
          location: formData.get("location"),
          availableUntil: formData.get("availableUntil"),
          urgentDonation: formData.get("urgentDonation") === "on",
          additionalNotes: formData.get("additionalNotes"),
        };

        alert(
          `Preview:\n\nTitle: ${previewData.title}\nCategory: ${previewData.category}\nSubcategory: ${previewData.subcategory}\nCondition: ${previewData.condition}\nLocation: ${previewData.location}\n\nDescription: ${previewData.description}`
        );
      });

      let draftTimer;
      const formInputs = document.querySelectorAll("input, select, textarea");

      formInputs.forEach((input) => {
        input.addEventListener("input", () => {
          clearTimeout(draftTimer);
          draftTimer = setTimeout(saveDraft, 2000);
        });
      });

      function saveDraft() {
        const formData = new FormData(document.getElementById("donateForm"));
        const draftData = {};
        for (let [key, value] of formData.entries()) {
          draftData[key] = value;
        }
        localStorage.setItem("donationDraft", JSON.stringify(draftData));
        console.log("Draft saved");
      }

      window.addEventListener("load", () => {
        const selectedCategory = localStorage.getItem("selectedCategory");
        const selectedSubcategory = localStorage.getItem("selectedSubcategory");

        if (selectedCategory && selectedSubcategory) {
          const categorySelect = document.getElementById("category");
          const categoryMap = {
            books: "books",
            stationery: "stationery",
            electronics: "electronics",
            clothing: "clothing",
            furniture: "furniture",
            sports: "sports",
          };

          if (categoryMap[selectedCategory]) {
            categorySelect.value = categoryMap[selectedCategory];
          }

          const subcategoryInput = document.getElementById("subcategory");
          const subcategoryName = selectedSubcategory
            .replace(/-/g, " ")
            .replace(/\b\w/g, (l) => l.toUpperCase());
          subcategoryInput.value = subcategoryName;

          localStorage.removeItem("selectedCategory");
          localStorage.removeItem("selectedSubcategory");
        }

        const draft = localStorage.getItem("donationDraft");
        if (draft) {
          const draftData = JSON.parse(draft);
          Object.keys(draftData).forEach((key) => {
            const element = document.querySelector(`[name="${key}"]`);
            if (element) {
              if (element.type === "checkbox" || element.type === "radio") {
                element.checked =
                  draftData[key] === element.value || draftData[key] === "on";
              } else {
                element.value = draftData[key];
              }
            }
          });
        }
      });

      function clearDraft() {
        localStorage.removeItem("donationDraft");
      }

      const descriptionField = document.getElementById("description");
      const descriptionGroup = descriptionField.parentElement;

      const charCounter = document.createElement("small");
      charCounter.style.color = "#666";
      charCounter.style.fontSize = "12px";
      charCounter.style.float = "right";
      descriptionGroup.appendChild(charCounter);

      descriptionField.addEventListener("input", () => {
        const length = descriptionField.value.length;
        charCounter.textContent = `${length}/500 characters`;

        if (length > 500) {
          charCounter.style.color = "#d32f2f";
        } else if (length < 20) {
          charCounter.style.color = "#ff9800";
        } else {
          charCounter.style.color = "#4caf50";
        }
      });

      descriptionField.dispatchEvent(new Event("input"));

      document.addEventListener("DOMContentLoaded", function () {
        const paidRadios = document.querySelectorAll('input[name="isPaid"]');
        const priceDiv = document.getElementById("priceDiv");
        const priceInput = document.getElementById("price");

        paidRadios.forEach((radio) => {
          radio.addEventListener("change", function () {
            if (this.value === "yes") {
              priceDiv.style.display = "block";
              priceInput.required = true;
            } else {
              priceDiv.style.display = "none";
              priceInput.required = false;
              priceInput.value = "";
            }
          });
        });

        // Initial state when page loads
        const selectedPaidOption = document.querySelector(
          'input[name="isPaid"]:checked'
        );
        if (selectedPaidOption && selectedPaidOption.value === "yes") {
          priceDiv.style.display = "block";
          priceInput.required = true;
        } else {
          priceDiv.style.display = "none";
          priceInput.required = false;
        }
      });
    </script>
  </body>
</html>
